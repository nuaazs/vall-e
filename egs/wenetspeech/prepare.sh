#!/usr/bin/env bash

set -eou pipefail

# fix segmentation fault reported in https://github.com/k2-fsa/icefall/issues/674
export PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python

nj=16
stage=-1
stop_stage=4

# We assume dl_dir (download dir) contains the following
# directories and files. If not, they will be downloaded
# by this script automatically.
#
#  - $dl_dir/wenetspeech

dl_dir=$PWD/download

dataset_parts="-p train -p dev -p test"  # debug

text_extractor="pypinyin_initials_finals"
audio_extractor="Encodec"  # or Fbank
audio_feats_dir=data/tokenized

. shared/parse_options.sh || exit 1


# All files generated by this script are saved in "data".
# You can safely remove "data" and rerun this script to regenerate it.
mkdir -p data

log() {
  # This function is from espnet
  local fname=${BASH_SOURCE[1]##*/}
  echo -e "$(date '+%Y-%m-%d %H:%M:%S') (${fname}:${BASH_LINENO[0]}:${FUNCNAME[1]}) $*"
}

if [ $stage -le 0 ] && [ $stop_stage -ge 0 ]; then
  log "dl_dir: $dl_dir"
  log "Stage 0: Download data"

  # If you have pre-downloaded it to /path/to/wenetspeech,
  # you can create a symlink
  #
  #   ln -sfv /path/to/wenetspeech $dl_dir/wenetspeech
  #
  # if [ ! -d $dl_dir/wenetspeech/dev ]; then
  if [ ! -d $dl_dir/wenetspeech/wenet_speech ] && [ ! -f $dl_dir/wenetspeech/metadata/v1.list ]; then
    echo "!!! You should download WenetSpeech manually !!! And put it in $dl_dir/wenetspeech"
  fi
fi

if [ $stage -le 1 ] && [ $stop_stage -ge 1 ]; then
  log "Stage 1: Prepare wenetspeech manifest"
  # We assume that you have downloaded the wenetspeech corpus
  # to $dl_dir/wenetspeech
  mkdir -p data/manifests
  if [ ! -e data/manifests/.wenetspeech.done ]; then
    lhotse prepare wenet-speech $dl_dir/wenetspeech data/manifests -j $nj
    touch data/manifests/.wenetspeech.done
  fi
fi


if [ $stage -le 2 ] && [ $stop_stage -ge 2 ]; then
  log "Stage 2: Tokenize/Fbank wenetspeech"
  mkdir -p ${audio_feats_dir}
  if [ ! -e ${audio_feats_dir}/.wenetspeech.tokenize.done ]; then
    python3 bin/tokenizer.py --dataset-parts "${dataset_parts}" \
        --text-extractor ${text_extractor} \
        --audio-extractor ${audio_extractor} \
        --batch-duration 400 \
        --prefix "wenetspeech" \
        --src-dir "data/manifests" \
        --output-dir "${audio_feats_dir}"
  fi
  touch ${audio_feats_dir}/.wenetspeech.tokenize.done
fi

if [ $stage -le 3 ] && [ $stop_stage -ge 3 ]; then
  log "Stage 3: Prepare wenetspeech train/dev/test"
  if [ ! -e ${audio_feats_dir}/.wenetspeech.train.done ]; then
    # dev 14326
    lhotse subset --first 400 \
        ${audio_feats_dir}/wenetspeech_cuts_dev.jsonl.gz \
        ${audio_feats_dir}/cuts_dev.jsonl.gz

    lhotse subset --last 13926 \
        ${audio_feats_dir}/wenetspeech_cuts_dev.jsonl.gz \
        ${audio_feats_dir}/cuts_dev_others.jsonl.gz

    # train
    lhotse combine \
        ${audio_feats_dir}/cuts_dev_others.jsonl.gz \
        ${audio_feats_dir}/wenetspeech_cuts_train.jsonl.gz \
        ${audio_feats_dir}/cuts_train.jsonl.gz

    # test
    lhotse copy \
      ${audio_feats_dir}/wenetspeech_cuts_test.jsonl.gz \
      ${audio_feats_dir}/cuts_test.jsonl.gz

    touch ${audio_feats_dir}/.wenetspeech.train.done
  fi
fi

python3 ./bin/display_manifest_statistics.py --manifest-dir ${audio_feats_dir}
